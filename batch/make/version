#!/bin/sh
# determines the version of the sources
# usage: version <source directory>

#set -x

show_usage()
{
    echo "USAGE: $1 [-v|--verbose] srcdir"
}

if test $# -ne 1 && test $# -ne 2
then
    echo "ERROR: Invalid argument count" >&2
    show_usage $0
    exit 1
fi

verbose=
srcdir="$1"

if ( test x"$1" = x"--verbose" || test x"$1" = x"-v" ) && test $# -eq 2
then
    verbose=#
    srcdir=$2
elif ( test x"$1" = x"--verbose" || test x"$1" = x"-v" )
then
    echo "ERROR: Invalid argument count" >&2
    show_usage $0
    exit 1
fi

# set version parts to defaults for CVS snapshot
major_version=`cat ${srcdir}/major_version`
DATE=`date +%Y%m%d`
builddate=`date +'%a, %d %b %Y %T %z'`
minor_version=
revid=0
revno=0
branchnick=
revcount=0
tag=
srcchanged=
lca=0
lcaz=0
branchurl=


#echo $major_version
#echo $minor_version

if test -d "${srcdir}/CVS"; then
    # get the date/branch/version tag
    rawtag=`cat ${srcdir}/CVS/Entries | grep major_version | sed -e "s,/major_version/.*/.*/.*/,,"`
    #echo $rawtag
    # determine the type of the tag
    echo $rawtag | grep "^D" > /dev/null && tagtype=D
    #echo $rawtag | grep "^Tb" > /dev/null && tagtype=Tb
    echo $rawtag | grep "^Tv" > /dev/null && tagtype=Tv
    #echo $tagtype

    # extract the raw tag
    tag=`echo $rawtag | sed -e "s,^$tagtype,,"`
    #echo $tag

    # date tag: make it a date dagged alpha release
    if test "$tagtype" = D; then
        DATE=`echo $tag | sed -e "s,\...\...\...\$,," | sed -e "s,\.,,g"`
        minor_version=`cat ${srcdir}/minor_version | sed -e "s,DATE,$DATE," -e "s,YYYYMMDD,$DATE,"`
    fi

    # version tag: take whole version, replace _[number] with .[number]
    if test "$tagtype" = Tv; then
        major_version=`echo $tag | sed -e "s,_\([0-9]\),\.\\1,g"`
        minor_version=""
        DATE=""
    fi
fi

if test -d "${srcdir}/.svn"; then
    # get the inter-repository path by parsing the URL

    URL=`svn info ${srcdir} | grep ^URL | sed -e 's,^URL: ,,'`

    # uncomment the following URLs to test various cases
    # trunk
    # URL=https://svn.sourceforge.net/svnroot/armagetronad/armagetronad/trunk/armagetronad
    # branch 0.4
    # URL=https://svn.sourceforge.net/svnroot/armagetronad/armagetronad/branches/0.4/armagetronad

    # tag 0.2.8.2
    # URL=https://svn.sourceforge.net/svnroot/armagetronad/armagetronad/tags/0.2.8.2/armagetronad

    #echo URL=$URL
    REPOPATH=`echo $URL | sed -e 's,/armagetronad$,,' -e 's,.*/armagetronad/,,'`
    #echo REPOPATH=$REPOPATH

    # is it a tag?
    if echo $REPOPATH | grep '^tags/' > /dev/null; then
        # echo Tag
        major_version=`echo $REPOPATH | sed -e 's,^tags/,,'`
        minor_version=""
        DATE=""
    else
        # is it a branch?
        if echo $REPOPATH | grep '^branches/' > /dev/null; then
            # echo Branch
            major_version=`echo $REPOPATH | sed -e 's,^branches/,,'`
        fi
        
        # trunk or branch

        # make revision the alpha tag
        REVISION=`svn info ${srcdir} | grep ^Revision | sed -e 's,^Revision: ,,'`
        # echo REVISION=$REVISION
        minor_version=_alpha$REVISION
        DATE=""
    fi
fi

bzr_count_revisions()
{
    srcdir="$1"
    limit="$2"
    
    test -z "$limit" || limit="-l $limit"
    
    bzr log $limit "${srcdir}" 2>/dev/null | egrep -c '^ *revno: [0-9\.]+$'
}

# *TODO* once we get our superproject up on launchpad (and thus get saner branch nicks), use branch nicks for $major_version
# Check if bzr is installed, and if the path is versionned
bzr >/dev/null 2>&1
# But for now, ignore it
if test $? -eq 0 && test -d ${srcdir}/.bzr
#if test 1 -eq 0
then
    # Crappily, we can't rely on revision numbers to do anything
    # ( ie. when one merges then pushes, the last revno might be lower than originally)
    # So we count revisions, including merged ones, also including fools which have empty
    # lines with only "revno: 15" in their commit messages
    revno=$( bzr revno ${srcdir} 2>/dev/null)    
    revcount=$( bzr_count_revisions ${srcdir} )
    lca=$revno
    lcaz=$revcount
    versioned=#
    branchurl=$( bzr info ${srcdir} 2>/dev/null | sed -ne 's/^  parent branch: \(.*\)$/\1/p' )


    # We will check this branch diverged, and/or if tree changed
    bzrmissingcout=$( cd ${srcdir} && bzr missing --this 2>/dev/null )
    missing=$?
    bzr diff ${srcdir} --quiet >/dev/null 2>&1
    changed=$?
        

    if test ${missing} -eq 1
    # if it diverged:
    then
        # Count the revisions we added locally
        localrevisions=$( echo "${bzrmissingcout}" | sed -ne '2,1s/[^0-9]//gp' )
        # See how many steps it is, with the fool's number
        stepsbackwards=$( bzr log ${srcdir} -l ${localrevisions} | sed -ne 's/^ *revno: [0-9\.]\+$/\0/p' | wc -l )
        # And start dancing.
        minor_version=_alpha_z$(( ${revcount} - ${stepsbackwards} ))_${DATE}
        # Set last common ancestors
        lca=$(( ${revno} - ${localrevisions}))
        lcaz=$(( ${revcount} - ${stepsbackwards} ))
        srcchanged=#
    elif test ${missing} -eq 0 && ( test ${changed} -eq 1 || test ${changed} -eq 2 )
    then
        # If a change was made and no more revision was added, just use revision fool's number plus build date
        minor_version=_alpha_z${revcount}_${DATE}
        # And this is versionned too
        srcchanged=#
    elif test ${missing} -eq 0
    then
        # If really no change was made, use the fool's number, with tag if any
        # So check if we have tags
        revno=$(bzr revno ${srcdir})
        tag=$(bzr tags -d ${srcdir} | sed -ne 's/^\(.*\) +${revno}$/\1/p' )
        if test ${tag}
        then
            # If it is tagged, use the tag
            minor_version=_alpha_z${revcount}_${tag}
        else
            # If not, use fool's number only
            minor_version=_alpha_z${revcount}
        fi
        # That's versioned as well
    else
        # Otherwise, this is just not versionned
        versioned=
    fi

    if test $versioned
    then
        major_version=$( cd ${srcdir}; bzr nick )
        branchnick=$major_version
        revid=$( bzr testament | sed -ne 's/^revision-id: \(.*\)/\1/p' )
    fi
fi

if test -z "$minor_version"
then
    test -z "$DATE" || minor_version=`cat ${srcdir}/minor_version | sed -e "s,DATE,$DATE," -e "s,YYYYMMDD,$DATE,"`
fi

if test $verbose
then
    echo VERSION \"$major_version$minor_version\"
    echo REVID \"$revid\"
    echo REVNO $revno
    echo BRANCHNICK \"$branchnick\"
    echo ZNR $revcount
    echo REVTAG \"$tag\"

    if test $srcchanged
    then
        echo CHANGED true
    else
        echo CHANGED false
    fi

    echo BUILDDATE \"$builddate\"
    echo BRANCHLCA $lca
    echo BRANCHLCAZ $lcaz
    echo BRANCHURL \"$branchurl\"
else
    echo $major_version$minor_version
fi

