// Protocol buffer types for ePlayer.cpp
package Engine;

import "nNetObject.proto";

// chat messages
message Chat
{
    // the object ID of the chatting player
    optional uint32 player_id = 1;
    
    // the fully formatted chat string
    optional string chat_line = 2;  

    // legacy message end marker, extensions go after it
    optional bool legacy_message_end_marker = 20000;
}

// color used by players. values go from 0 to 15.
message ePlayerColor
{
    optional uint32 r = 1;
    optional uint32 g = 2;
    optional uint32 b = 3;

    // legacy message end marker, extensions go after it
    optional bool legacy_message_end_marker = 20000;
}

message ePlayerNetIDSync
{
    // base class init data
    optional Network.nNetObjectSync base = 1;

    // legacy creation data end marker
    optional bool legacy_create_end = 20000;

    optional ePlayerColor color     = 2;
    optional uint32 ping_charity    = 3;
    optional string player_name     = 4;
    optional float  ping            = 5;
    optional uint32 flags           = 6;
    optional sint32 score           = 7;
    optional bool   disconnected    = 8;
    optional uint32 next_team_id    = 9;
    optional uint32 current_team_id = 10;
    optional int32  favorite_number_of_players_per_team = 11;
    optional bool   name_team_after_me = 12;
    optional string team_name       = 13;

    // legacy sync data end marker
    optional bool legacy_sync_end = 20001;
}
